@use "variables" as v;
@use "reboot";
@use "tables";
@use "inputs";
@use "spacing";

*, *::after, *::before{
    margin: 0;
    padding: 0;
    font-family: v.$font;
}
h1, .h1{
    font-size: 3.5rem;
    margin: 1.5rem 0;
}
h2, .h2{
    font-size: 2.5rem;
    margin: 1.25rem 0;
}
h3, .h3{
    font-size: 2rem;
    margin: 1.1rem 0;
}
h4, .h4{
    font-size: 1.75rem;
    margin: 1rem 0;
}
h5, .h5{
    font-size: 1.5rem;
    margin: 0.5rem 0;
}
h6, .h6{
    font-size: 1.25rem;
    margin: 0.5rem 0;
}
.lead{
    font-size: 150%;
    font-weight: lighter;
    margin: 0.5rem 0;
}
b,strong,.b, .bold{
    font-weight: 700 !important;
    color: var(--astra-grey-700);
}
.semiBold{
    font-weight: 600 !important;
}
i,em,.i{
    font-style: italic;
}
li{
    list-style-position: inside;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    color: var(--astra-grey-600);
}
ul{
    list-style-type: circle;
    margin-bottom: 0.5rem;
}
ol{
    margin-bottom: 0.5rem;
}
.unmarked{
    list-style-type: none;
    padding-left: 1rem;
}
.badge {
    padding: 3px 0.5em;
    margin: 10px;
    border-radius: 5px;
    font-weight: bold;
    background-color: var(--astra-blue-500);
    color: var(--astra-grey-100);
}
.footerText{
    margin: 0;
    padding: 1.5rem;
}

.inline{
    display: inline;
}
.block{
    display: block;
}
.inlineBlock{
    display: inline-block;
}
.inlineFlex{
    display: inline-flex;
}
.hidden{
    display: hidden;
}

.left {
    float: left !important;
}
.right {
    float: right !important;
}

@mixin btn($bg: #000, $padding: 0px, $color: v.$grey-700){
    background-color: $bg;
    padding: 0.5rem 1rem;
    @if ($padding > 0){
        padding: calc(0.5rem - $padding) calc(1rem - $padding);
    }
    text-transform: uppercase;
    font-weight: 500;
    border-radius: 2px;
    cursor: pointer;
    transition: 0.1s linear;
    margin: 2px;
    border: none;
    color: $color;
    &.xs{
        font-size: 80%;
        padding: 0.4rem 0.8rem;
        @if ($padding > 0){
            padding: calc(0.4rem - $padding) calc(0.8rem - $padding);
        }
    }
    &.xl{
        font-size: 120%;
        padding: 1rem 2rem;
        @if ($padding > 0){
            padding: calc(1rem - $padding) calc(2rem - $padding);
        }
    }
}
@function darken($color: #000){
    @return change-color($color: $color, $lightness: 45%);
}
button, input[type="button"], .button{
    @include btn($bg: transparent, $padding: 1px);
    border: 1px solid v.$grey-300;
    &:hover{
        border-color: v.$grey-800;
    }
}
button.primary, input[type="button"].primary, .button.primary{
    @include btn($bg: v.$primary-color, $color: v.$grey-100);
    &:hover{
        background-color: darken($color: v.$primary-color);
    }
}
button.secondary, input[type="button"].secondary, .button.secondary{
    @include btn($bg: white, $padding: 1px, $color: v.$primary-color);
    border: 1px solid v.$primary-color;
    &:hover{
        border-color: darken($color: v.$primary-color);
        color: darken($color: v.$primary-color);
    }
}
button.danger, input[type="button"].danger, .button.danger{
    @include btn($bg: v.$danger-color, $color: v.$grey-100);
    &:hover{
        background-color: darken($color: v.$danger-color);
    }
}
button.warning, input[type="button"].warning, .button.warning{
    @include btn($bg: v.$warning-color, $color: v.$grey-700);
    &:hover{
        background-color: darken($color: v.$warning-color);
    }
}
a{
    cursor: pointer;
    color: v.$grey-700;
    transition: 0.1s linear;
    &:hover{
        color: v.$grey-500;
    }
}
.absolute{
    position: absolute;
}
.relative{
    position: relative;
}
.fixed{
    position: fixed;
}
.sticky-top{
    position: sticky;
    top: 0;
}
.sticky-bottom{
    position: sticky;
    bottom: 0;
}
.text-center{
    text-align: center;
}
.text-right{
    text-align: right;
}
.text-left{
    text-align: left;
}
.root{
    max-width: 80%;
    margin: auto;
}
.rootXS{
    max-width: v.$xs;
    margin: auto;
}
.rootS{
    max-width: v.$s;
    margin: auto;
}
.rootM{
    max-width: v.$m;
    margin: auto;
}
.rootL{
    max-width: v.$l;
    margin: auto;
}
.rootXL{
    max-width: v.$xl;
    margin: auto;
}
.shadowXS{
    filter: drop-shadow(0 3px 5px change-color($color: v.$grey-300, $alpha: 0.5));
}
.shadowS{
    filter: drop-shadow(0 4px 5px change-color($color: v.$grey-300, $alpha: 0.5));
}
.shadowM{
    filter: drop-shadow(0 5px 5px change-color($color: v.$grey-300, $alpha: 0.5));
}
.shadowL{
    filter: drop-shadow(0 6px 5px change-color($color: v.$grey-300, $alpha: 0.5));
}
.shadowXL{
    filter: drop-shadow(0 7px 5px change-color($color: v.$grey-300, $alpha: 0.5));
}
